<?php

namespace CreativeData\CroissantBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * HistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HistoryRepository extends EntityRepository {

    function findAllFromDate($date) {
	return $this->getEntityManager()->createQuery('
	SELECT h FROM CreativeDataCroissantBundle:History h
	WHERE h.dateCroissant >= :date_from')->setParameter('date_from', $date)->getResult();
    }
    function findAllToDate($date) {
	return $this->getEntityManager()->createQuery('
	SELECT h FROM CreativeDataCroissantBundle:History h
	WHERE h.dateCroissant <= :date_from')->setParameter('date_from', $date)->getResult();
    }
    function findAllPublic() {
	return $this->getEntityManager()->createQuery('
	SELECT h FROM CreativeDataCroissantBundle:History h 
	WHERE h.ok!=0 AND h.ok!=2')->getResult();
    }
    function findAllPublicFromDate($date) {
	return $this->getEntityManager()->createQuery('
	SELECT h FROM CreativeDataCroissantBundle:History h 
	WHERE h.ok!=0 AND h.ok!=2 AND h.dateCroissant >= :date_from ORDER BY h.dateCroissant')->setParameter('date_from', $date)->getResult();
    }
    function findAllFromDateNotRefused($datedeb,$datefin) {
	return $this->getEntityManager()->createQuery('
	SELECT h FROM CreativeDataCroissantBundle:History h
	WHERE h.dateCroissant >= :date_from AND  h.dateCroissant <= :date_to AND h.ok!=2')->setParameter('date_from', $datedeb)->setParameter('date_to', $datefin)->getResult();
    }

    function findAllToDateAccepted($date) {
	return $this->getEntityManager()->createQuery('
	SELECT h FROM CreativeDataCroissantBundle:History h
	WHERE  h.dateCroissant <= :date_to AND (h.ok=1 OR h.ok =3)')->setParameter('date_to', $date)->getResult();
    }
    function findAllFromDateAndUser($date_from,$date_to, $user) {
	return $this->getEntityManager()->createQuery('
		    SELECT h FROM CreativeDataCroissantBundle:History h
		    WHERE h.dateCroissant >= :date_from AND h.dateCroissant <= :date_to AND  h.user = :idUser')
			->setParameter('date_from', $date_from)->setParameter('date_to', $date_to)->setParameter('idUser', $user->getId())->getResult();
    }
    function deleteAll() {
	return $this->getEntityManager()->createQuery('
	DELETE FROM  CreativeDataCroissantBundle:History')->getResult();
    }
    function findTomorrow() {
	return $this->getEntityManager()->createQuery('
	SELECT h FROM CreativeDataCroissantBundle:History h 
	WHERE h.ok!=0 AND h.ok!=2 AND h.dateCroissant >= :date_from AND h.dateCroissant <= :date_to  ORDER BY h.dateCroissant ')
                ->setParameter('date_from', date("Y-m-d 00:00:00",strtotime("now")))
                ->setParameter('date_to', date("Y-m-d 00:00:00",strtotime("+2 days")))
                ->getResult();
    }
}